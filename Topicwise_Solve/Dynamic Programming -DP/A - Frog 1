https://atcoder.jp/contests/dp/tasks/dp_a


#include <bits/stdc++.h>
using namespace std;
#define                MXX 1000006
#define                FAST_IO ios_base::sync_with_stdio(false),cin.tie(NULL)
#define                exit() return 0
#define                mpii map<int, int>
#define                mpit map<int, int>::iterator it
#define                si set<int>
#define                sit set<int>::iterator it;
#define                ll long long int
#define                endl "\n";
const                  ll INF = 2000000000000000000LL;
const                  int MOD = 10000007;

int a[MXX], N;
int dp[MXX];
ll solve(int curr)
{
    if(curr>=N)
    {
        return INF;
    }
    if(curr == N - 1)
    {
        return 0;
    }
    if(dp[curr]!=-1)
    {
        return dp[curr];
    }
    ll x = solve(curr + 1) + abs(a[curr] - a[curr+1]);
    ll y = solve(curr + 2) + abs(a[curr] - a[curr+2]);
    ll ans = min(x, y);
    dp[curr] = ans;
    return ans;
}
int main()
{
    FAST_IO;
    cin>>N;
    for(int i = 0; i<N; i++)cin>>a[i];
    memset(dp, -1, sizeof(dp));
    cout<<solve(0)<<endl;
    return 0;
}
